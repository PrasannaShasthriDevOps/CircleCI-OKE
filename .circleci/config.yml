--- 
version: 2
jobs: 
  build: 
    docker: 
      - 
        image: "circleci/node:7.10"
    
    working_directory: ~/repo        
    
    steps: 
      - checkout
      - 
        setup_remote_docker: 
          docker_layer_caching: true
      - 
        run: 
          name: "Install OCI CLI"        
          command: |
              sudo apt-get install -y libssl-dev libffi-dev python-dev build-essential
              bash -c "$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh) --accept-all-defaults" 
              /home/circleci/bin/oci --help
              sudo cp -f  /home/circleci/bin/oci /usr/bin/oci
              oci --help
              oci -version

      - 
        run: 
          name: "Install Docker client"        
          command: |
              set -x
              VER="17.03.0-ce"
              curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
              tar -xz -C /tmp -f /tmp/docker-$VER.tgz
              sudo chown -R $(whoami) /usr/bin
              mv -f /tmp/docker/* /usr/bin
              docker --version

      - run:
           name : Install kubectl for running kubernetes commands
           command: |
                set -x
                curl -LO curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
                chmod +x ./kubectl
                mv ./kubectl /usr/bin/kubectl

      - run:
          name: configure access to Oracle Kubernetes Engine cluster
          command: |
                set -x
                mkdir -p $HOME/.kube
                export ENDPOINT="containerengine.us-ashburn-1.oraclecloud.com"
                mkdir -p $HOME/.oci
                cp ociconfig ~/.oci/config
                echo '-----BEGIN RSA PRIVATE KEY-----' > $HOME/.oci/oci_api_key.pem
                echo $OCI_API_KEY >> $HOME/.oci/oci_api_key.pem
                echo '-----END RSA PRIVATE KEY-----' >> $HOME/.oci/oci_api_key.pem
                chmod 600 $HOME/.oci/oci_api_key.pem
                # cat $HOME/.oci/oci_api_key.pem
                sed -i -e "s/OCI_USER/$OCI_USER/g" ~/.oci/config
                sed -i -e "s/OCI_FP/$OCI_USER_FP/g" ~/.oci/config
                sed -i -e "s/OCI_TENANCY_ID/$OCI_TENANCY_ID/g" ~/.oci/config
                sed -i -e "s/OCI_REGION/$OCI_REGION/g" ~/.oci/config
                ls -ltr $HOME/.oci
                # cat ~/.oci/config
                touch $HOME/.kube/config
                # cat $HOME/.kube/config
                chmod +x ./get-kubeconfig.sh
                ./get-kubeconfig.sh $OKE_CLUSTER_ID > $HOME/.kube/config
                #cat $HOME/.kube/config
                kubectl get nodes             
      - 
        restore_cache: 
          keys: 
            - "v1-dependencies-{{ checksum \"package.json\" }}"
            - v1-dependencies-
      - 
        run: "yarn install"
      - 
        save_cache: 
          key: "v1-dependencies-{{ checksum \"package.json\" }}"
          paths: 
            - node_modules
      - 
        run: "yarn test"
      - 
        run: 
          name: "Build Docker Image"
          command: |
              docker version          
              TAG=1.$CIRCLE_BUILD_NUM
              docker build -t  $DOCKER_REGISTRY/$TENANCY/circleci-demo-docker:$TAG .
              docker login $DOCKER_REGISTRY -u $DOCKER_USER -p $DOCKER_PASS
              docker push $DOCKER_REGISTRY/$TENANCY/circleci-demo-docker:$TAG

      - run:
         name : Deploy the docker image to Kubernetes cluster
         command: |
                set -x
                kubectl get nodes
                export TAG=1.$CIRCLE_BUILD_NUM
                echo $TAG
                sed -i -e "s/IMG_TAG/$TAG/g" kubernetes/kube-deploy.yaml
                sed -i -e "s/DOCKER_REGISTRY/$DOCKER_REGISTRY/g" kubernetes/kube-deploy.yaml
                sed -i -e "s/TENANCY/$TENANCY/g" kubernetes/kube-deploy.yaml
                cat kubernetes/kube-deploy.yaml
                kubectl create secret docker-registry regcred --docker-server=iad.ocir.io --docker-username=$DOCKER_USER --docker-password=$DOCKER_PASS  --docker-email=prasannashasthri@gmail.com || echo 'secret exists'
                kubectl apply -f kubernetes/kube-deploy.yaml
                sleep 5
                kubectl get svc


    
